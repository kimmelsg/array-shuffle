{"version":3,"sources":["index.js"],"names":["module","exports","items","Array","isArray","TypeError","shuffledItems","index","length","randomIndex","Math","floor","random"],"mappings":";AAAA,aAUA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAAA,OAAOC,QAAU,SAAAC,GACX,IAACC,MAAMC,QAAQF,GACX,MAAA,IAAIG,UAAwCH,uBAAAA,OAAAA,EAAAA,KAG/C,IADCI,IAAAA,EAAoBJ,EAAAA,GACjBK,EAAQ,EAAGA,EAAQD,EAAcE,OAAS,EAAGD,IAAS,CACvDE,IAAAA,EAAcC,KAAKC,MAAMD,KAAKE,SAAWL,GAEM,EAAA,CACnDD,EAAcG,GACdH,EAAcC,IAFfD,EAAcC,GAH8C,EAAA,GAGtCD,EAAcG,GAHwB,EAAA,GAQxDH,OAAAA","file":"index.map","sourceRoot":"..","sourcesContent":["'use strict';\n\n/**\n * Fisher-Yates shuffles an array of items in O(n) time.\n * The algorithm effectively puts all elements into a hat and continually\n * draws random elements from the hat until no elements remain.\n * @param {array} items - An array of items.\n * @returns {array} shuffledItems - A new array of shuffled items.\n */\n\nmodule.exports = items => {\n  if (!Array.isArray(items)) {\n    throw new TypeError(`Expected Array, got ${typeof items}`);\n  }\n  const shuffledItems = [...items];\n  for (let index = 0; index < shuffledItems.length - 2; index++) {\n    const randomIndex = Math.floor(Math.random() * index);\n    // Swap indices with es6 destructuring e.g. [a, b] = [b, a]\n    [shuffledItems[index], shuffledItems[randomIndex]] = [\n      shuffledItems[randomIndex],\n      shuffledItems[index],\n    ];\n  }\n  return shuffledItems;\n};\n"]}